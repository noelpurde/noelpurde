name: Update Profile Pet

on:
  schedule:
    - cron: '0 0 * * 1'  # Runs every Monday at midnight UTC
  push:
    branches:
      - main

jobs:
  update-pet:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Determine Pet State
        id: set_state
        run: |
          TODAY=$(date +%m)
          # Check recent commits and set pet state
          if [[ $(git log --since='1 week ago' --pretty=format:'%h' | wc -l) -eq 0 ]]; then
            echo "PET_STATE=sleepy_cat.txt" >> $GITHUB_ENV
          elif [[ "$TODAY" == "12" || "$TODAY" == "01" || "$TODAY" == "02" ]]; then
            echo "PET_STATE=winter_cat.txt" >> $GITHUB_ENV
          elif [[ "$TODAY" == "03" || "$TODAY" == "04" || "$TODAY" == "05" ]]; then
            echo "PET_STATE=spring_cat.txt" >> $GITHUB_ENV
          else
            echo "PET_STATE=active_cat.txt" >> $GITHUB_ENV
          fi

      - name: Update README with Pet
        run: |
          # Read the content of the pet state file
          PET_ART=$(cat pet_states/$PET_STATE)
          
          # Escape special characters for sed (including parentheses, &, etc.)
          ESCAPED_PET_ART=$(echo "$PET_ART" | sed 's/[&/\]/\\&/g; s/(/\\(/g; s/)/\\)/g')

          # Use echo -e to preserve actual newlines in ASCII art and insert into README.md
          echo -e "$ESCAPED_PET_ART" | sed '/<!-- Pet Start -->/,/<!-- Pet End -->/c\\<!-- Pet Start -->\n'"$(cat)"'\n<!-- Pet End -->' README.md

      - name: Check for changes and commit
        run: |
          # Check if there are any changes
          if [[ -n "$(git status --porcelain)" ]]; then
            git config --global user.name 'GitHub Action Bot'
            git config --global user.email 'bot@example.com'
            git add README.md
            git commit -m "Updated profile pet"
            git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          else
            echo "No changes to commit."
          fi
